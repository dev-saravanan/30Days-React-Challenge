{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/lettersCalculatorApp/src/components/LettersCalculator/index.js\";\nimport './index.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LettersCalculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInputCount: 0\n    };\n    this.countSearchInput = event => {\n      let inputValue = event.target.value;\n      const inputValueArray = inputValue.split('');\n      const nonEmptyValue = inputValueArray.filter(eachChar => eachChar !== ' ');\n      inputValue = nonEmptyValue.join('');\n      this.setState({\n        searchInputCount: inputValue.length\n      });\n    };\n  }\n  render() {\n    const {\n      searchInputCount\n    } = this.state;\n    let searchCountElement;\n    if (searchInputCount > 0) {\n      searchCountElement = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"letters-count-text\",\n        children: [\"No. of letters: \", searchInputCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    } else {\n      searchCountElement = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No.of letters: 0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: \"https://assets.ccbp.in/frontend/react-js/stop-watch-with-calculator-img.png\",\n        alt: \"letters calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading-text\",\n          children: \"Calculate the Letters you enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"search-description\",\n          htmlFor: \"search-input\",\n          children: \"Enter the phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"search-input\",\n          className: \"search-input\",\n          type: \"search\",\n          placeholder: \"Enter the Phrase\",\n          onChange: this.countSearchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-count-container\",\n          children: searchCountElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LettersCalculator;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","LettersCalculator","constructor","args","state","searchInputCount","countSearchInput","event","inputValue","target","value","inputValueArray","split","nonEmptyValue","filter","eachChar","join","setState","length","render","searchCountElement","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","id","type","placeholder","onChange"],"sources":["/home/workspace/reactjs/coding-practices/lettersCalculatorApp/src/components/LettersCalculator/index.js"],"sourcesContent":["import './index.css'\nimport {Component} from 'react'\n\nclass LettersCalculator extends Component {\n  state = {searchInputCount: 0}\n\n  countSearchInput = event => {\n    let inputValue = event.target.value\n    const inputValueArray = inputValue.split('')\n    const nonEmptyValue = inputValueArray.filter(eachChar => eachChar !== ' ')\n    inputValue = nonEmptyValue.join('')\n    this.setState({searchInputCount: inputValue.length})\n  }\n\n  render() {\n    const {searchInputCount} = this.state\n\n    let searchCountElement\n\n    if (searchInputCount > 0) {\n      searchCountElement = (\n        <p className=\"letters-count-text\">No. of letters: {searchInputCount}</p>\n      )\n    } else {\n      searchCountElement = <p>No.of letters: 0</p>\n    }\n\n    return (\n      <div className=\"bg-container\">\n        <img\n          className=\"image\"\n          src=\"https://assets.ccbp.in/frontend/react-js/stop-watch-with-calculator-img.png\"\n          alt=\"letters calculator\"\n        />\n        <div className=\"text-container\">\n          <h1 className=\"heading-text\">Calculate the Letters you enter</h1>\n          <label className=\"search-description\" htmlFor=\"search-input\">\n            Enter the phrase\n          </label>\n          <input\n            id=\"search-input\"\n            className=\"search-input\"\n            type=\"search\"\n            placeholder=\"Enter the Phrase\"\n            onChange={this.countSearchInput}\n          />\n          <div className=\"letter-count-container\">{searchCountElement}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LettersCalculator\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,SAAQA,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,iBAAiB,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACxCC,KAAK,GAAG;MAACC,gBAAgB,EAAE;IAAC,CAAC;IAAA,KAE7BC,gBAAgB,GAAGC,KAAK,IAAI;MAC1B,IAAIC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;MACnC,MAAMC,eAAe,GAAGH,UAAU,CAACI,KAAK,CAAC,EAAE,CAAC;MAC5C,MAAMC,aAAa,GAAGF,eAAe,CAACG,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAK,GAAG,CAAC;MAC1EP,UAAU,GAAGK,aAAa,CAACG,IAAI,CAAC,EAAE,CAAC;MACnC,IAAI,CAACC,QAAQ,CAAC;QAACZ,gBAAgB,EAAEG,UAAU,CAACU;MAAM,CAAC,CAAC;IACtD,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,MAAM;MAACd;IAAgB,CAAC,GAAG,IAAI,CAACD,KAAK;IAErC,IAAIgB,kBAAkB;IAEtB,IAAIf,gBAAgB,GAAG,CAAC,EAAE;MACxBe,kBAAkB,gBAChBpB,OAAA;QAAGqB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,kBAAgB,EAACjB,gBAAgB;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACxE;IACH,CAAC,MAAM;MACLN,kBAAkB,gBAAGpB,OAAA;QAAAsB,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC9C;IAEA,oBACE1B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtB,OAAA;QACEqB,SAAS,EAAC,OAAO;QACjBM,GAAG,EAAC,6EAA6E;QACjFC,GAAG,EAAC;MAAoB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF1B,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BtB,OAAA;UAAIqB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjE1B,OAAA;UAAOqB,SAAS,EAAC,oBAAoB;UAACQ,OAAO,EAAC,cAAc;UAAAP,QAAA,EAAC;QAE7D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1B,OAAA;UACE8B,EAAE,EAAC,cAAc;UACjBT,SAAS,EAAC,cAAc;UACxBU,IAAI,EAAC,QAAQ;UACbC,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ,EAAE,IAAI,CAAC3B;QAAiB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACF1B,OAAA;UAAKqB,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAEF;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAezB,iBAAiB"},"metadata":{},"sourceType":"module"}