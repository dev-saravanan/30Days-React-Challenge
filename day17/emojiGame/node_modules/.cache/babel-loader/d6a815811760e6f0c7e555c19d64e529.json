{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/emojiGame/src/components/EmojiGame/index.js\";\n/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\n\nimport { Component } from 'react';\nimport NavBar from '../NavBar';\nimport './index.css';\nimport EmojiCard from '../EmojiCard';\nimport WinOrLoseCard from '../WinOrLoseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EmojiGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedEmojis: [],\n      score: 0,\n      topScore: 0\n    };\n    this.onSelectEmoji = emojiId => {\n      const {\n        emojisList\n      } = this.props;\n    };\n  }\n  render() {\n    const shuffledEmojisList = () => {\n      const {\n        emojisList\n      } = this.props;\n      return emojisList.sort(() => Math.random() - 0.5);\n    };\n    const renderEmojis = () => {\n      const emojiList = shuffledEmojisList();\n      return emojiList.map(eachEmoji => /*#__PURE__*/_jsxDEV(EmojiCard, {\n        emojiDetails: eachEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }, this));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-bg-container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"emojis-container\",\n          children: renderEmojis()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default EmojiGame;","map":{"version":3,"names":["Component","NavBar","EmojiCard","WinOrLoseCard","jsxDEV","_jsxDEV","EmojiGame","constructor","args","state","selectedEmojis","score","topScore","onSelectEmoji","emojiId","emojisList","props","render","shuffledEmojisList","sort","Math","random","renderEmojis","emojiList","map","eachEmoji","emojiDetails","fileName","_jsxFileName","lineNumber","columnNumber","className","children"],"sources":["/home/workspace/reactjs/coding-practices/emojiGame/src/components/EmojiGame/index.js"],"sourcesContent":["/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\n\nimport {Component} from 'react'\n\nimport NavBar from '../NavBar'\n\nimport './index.css'\nimport EmojiCard from '../EmojiCard'\nimport WinOrLoseCard from '../WinOrLoseCard'\n\nclass EmojiGame extends Component {\n  state = {selectedEmojis: [], score: 0, topScore: 0}\n\n  onSelectEmoji = emojiId => {\n    const {emojisList} = this.props\n  }\n\n  render() {\n    const shuffledEmojisList = () => {\n      const {emojisList} = this.props\n      return emojisList.sort(() => Math.random() - 0.5)\n    }\n\n    const renderEmojis = () => {\n      const emojiList = shuffledEmojisList()\n\n      return emojiList.map(eachEmoji => <EmojiCard emojiDetails={eachEmoji} />)\n    }\n\n    return (\n      <div className=\"main-bg-container\">\n        <NavBar />\n        <div className=\"content-container\">\n          <ul className=\"emojis-container\">{renderEmojis()}</ul>\n          {/* <WinOrLoseCard /> */}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAQA,SAAS,QAAO,OAAO;AAE/B,OAAOC,MAAM,MAAM,WAAW;AAE9B,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,aAAa,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAChCC,KAAK,GAAG;MAACC,cAAc,EAAE,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAC,CAAC;IAAA,KAEnDC,aAAa,GAAGC,OAAO,IAAI;MACzB,MAAM;QAACC;MAAU,CAAC,GAAG,IAAI,CAACC,KAAK;IACjC,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IACP,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,MAAM;QAACH;MAAU,CAAC,GAAG,IAAI,CAACC,KAAK;MAC/B,OAAOD,UAAU,CAACI,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACnD,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,SAAS,GAAGL,kBAAkB,CAAC,CAAC;MAEtC,OAAOK,SAAS,CAACC,GAAG,CAACC,SAAS,iBAAIpB,OAAA,CAACH,SAAS;QAACwB,YAAY,EAAED;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC;IAC3E,CAAC;IAED,oBACEzB,OAAA;MAAK0B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC3B,OAAA,CAACJ,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVzB,OAAA;QAAK0B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChC3B,OAAA;UAAI0B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEV,YAAY,CAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAexB,SAAS"},"metadata":{},"sourceType":"module"}